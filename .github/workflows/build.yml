name: Build DiVERE Application (PyInstaller)

on:
  push:
    branches: ['**']
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - os: macos-14
            platform: macos
            arch: arm64
            extension: ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies (macOS)
      run: |
        brew install openssl readline sqlite3 xz zlib libomp

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r requirements.txt
        # 明确确保 onnxruntime 安装（arm64 原生包）
        if [ "${{ matrix.arch }}" = "arm64" ]; then
          pip install --upgrade onnxruntime
        fi
        echo "--- Installed packages ---"
        pip list | sed -n '1,200p'
        echo "--------------------------"

    - name: Check required imports
      run: |
        python - <<'PY'
        import importlib, sys
        required = [
          'PySide6', 'numpy', 'cv2', 'PIL', 'scipy', 'imageio', 'colour', 'onnxruntime', 'sklearn'
        ]
        missing = []
        for m in required:
            try:
                importlib.import_module(m)
            except Exception as e:
                missing.append((m, repr(e)))
        if missing:
            print('Missing modules:')
            for name, err in missing:
                print(f'- {name}: {err}')
            sys.exit(1)
        print('All required imports are available.')
        PY

    - name: Install PyInstaller
      run: |
        pip install pyinstaller pyinstaller-hooks-contrib
        python -c "import PyInstaller; print('PyInstaller', PyInstaller.__version__)"

    - name: Build with PyInstaller
      run: |
        rm -rf build dist *.spec || true
        python -m PyInstaller \
          -y --clean --noconfirm \
          --windowed \
          --name "DiVERE" \
          --add-data "divere/config:config" \
          --add-data "divere/models:models" \
          --collect-all onnxruntime \
          --collect-submodules sklearn \
          --hidden-import "sklearn.linear_model" \
          --hidden-import "scipy.interpolate" \
          --hidden-import "scipy.optimize" \
          --hidden-import "scipy.ndimage" \
          divere/__main__.py
        echo "✅ PyInstaller build completed"

    - name: Relocate resources into Contents/MacOS (for runtime compatibility)
      run: |
        app_bundle=$(find dist -type d -name "*.app" | head -1)
        if [ -z "$app_bundle" ]; then
          echo "::error::No .app bundle found after build." && exit 1
        fi
        resources_dir="$app_bundle/Contents/Resources"
        macos_dir="$app_bundle/Contents/MacOS"
        mkdir -p "$macos_dir"
        if [ -d "$resources_dir/config" ]; then
          rm -rf "$macos_dir/config"
          cp -a "$resources_dir/config" "$macos_dir/config"
        fi
        if [ -d "$resources_dir/models" ]; then
          rm -rf "$macos_dir/models"
          cp -a "$resources_dir/models" "$macos_dir/models"
        fi
        echo "Relocated resources to Contents/MacOS"

    - name: Verify bundle contents
      run: |
        app_bundle=$(find dist -type d -name "*.app" | head -1)
        if [ -z "$app_bundle" ]; then
          echo "::error::No .app bundle found." && exit 1
        fi
        echo "App bundle: $app_bundle"

        echo "--- Listing key dylib files in bundle (onnxruntime) ---"
        find "$app_bundle" -name "*onnxruntime*.dylib" | sed -n '1,80p' || true

        echo "--- Verifying data files in bundle ---"
        required_files=(
          "Contents/MacOS/config/app_settings.json"
          "Contents/MacOS/config/colorspace/ACEScg.json"
          "Contents/MacOS/config/colorspace/Film_KodakRGB_Linear.icc"
          "Contents/MacOS/config/curves/Kodak_Endura_Paper.json"
          "Contents/MacOS/config/matrices/Identity.json"
          "Contents/MacOS/models/net_awb.onnx"
        )
        missing=0
        for f in "${required_files[@]}"; do
          if [ ! -f "$app_bundle/$f" ]; then
            echo "::error::Missing: $f"
            missing=1
          fi
        done
        if [ $missing -ne 0 ]; then
          echo "Required data files missing in app bundle" && exit 1
        fi
        echo "✅ Data verification passed."

    - name: Package macOS App
      run: |
        app_bundle=$(find dist -type d -name "*.app" | head -1)
        cd dist
        tar -czf "DiVERE-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz" "$(basename "$app_bundle")"

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: DiVERE-${{ matrix.platform }}-${{ matrix.arch }}
        path: dist/DiVERE-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
