name: Build DiVERE Application

on:
  push:  # 任何 push 都触发（便于快速调试）
    branches: ['**']
  workflow_dispatch:  # 手动触发
  # 仍保留发布标签触发（可选）
  # push:
  #   tags: ['v*']

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        include:
          - os: macos-14
            platform: macos
            arch: arm64
            extension: ''

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system dependencies (macOS)
      run: |
        brew install openssl readline sqlite3 xz zlib

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Nuitka
      run: |
        pip install nuitka

    - name: Prepare build directories
      run: |
        mkdir -p dist/config dist/models
        cp -r config/* dist/config/
        cp divere/models/net_awb.onnx dist/models/
        ls -la dist/config/ | head -5
        ls -la dist/models/

    - name: Build with Nuitka (Manual)
      run: |
        python -m nuitka \
          --standalone \
          --enable-plugin=pyside6 \
          --output-dir=dist \
          --include-data-dir=dist/config=config \
          --include-data-file=dist/models/net_awb.onnx=models/net_awb.onnx \
          --assume-yes-for-downloads \
          --macos-create-app-bundle \
          --macos-app-icon=none \
          divere/__main__.py
        echo "✅ Nuitka build completed"
        echo "📁 Build output structure (first 200 files):"
        find dist -type f -print | sed -n '1,200p' || true

    - name: Sync resources into bundle
      run: |
        app_bundle=$(find dist -maxdepth 1 -type d -name "*.app" | head -1)
        if [ -z "$app_bundle" ]; then
          echo "❌ No .app bundle found." && exit 1
        fi
        macos_bin_dir="$app_bundle/Contents/MacOS"
        mkdir -p "$macos_bin_dir/config" "$macos_bin_dir/models"
        cp -r dist/config/* "$macos_bin_dir/config/"
        cp -r dist/models/* "$macos_bin_dir/models/" || true
        echo "📁 After sync, preview:"; find "$macos_bin_dir" -maxdepth 2 -type f | sed -n '1,100p'

    - name: Package (macOS)
      run: |
        app_bundle=$(find dist -maxdepth 1 -type d -name "*.app" | head -1)
        cd dist
        tar -czf "DiVERE-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz" "$(basename "$app_bundle")"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: DiVERE-${{ matrix.platform }}-${{ matrix.arch }}
        path: |
          dist/DiVERE-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
          dist/*.app/**
