[project]
name = "divere"
version = "0.1.27"
description = "胶片校色工具 - 基于ACEScg Linear工作流的胶片数字化后期处理"
authors = [{name = "V7", email = "vanadis@yeah.net"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9,<3.13"
keywords = ["film", "color-correction", "image-processing", "photography"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Scientific/Engineering :: Image Processing",
]
dependencies = [
    "numpy>=1.24.0,<2.0.0",
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "PySide6>=6.5.0",
    "scipy>=1.13.0,<1.15.0",
    "imageio>=2.31.0",
    "colour-science>=0.4.2",
    "onnxruntime>=1.15.0",
    "pyopencl>=2024.1",
    "tifffile>=2024.2.12",
    "imagecodecs>=2024.1.1",
    "cma>=3.3.0",
]

[project.urls]
Homepage = "https://github.com/V7CN/DiVERE"
Repository = "https://github.com/V7CN/DiVERE"

[project.scripts]
divere = "divere.__main__:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-qt>=4.2.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]
gpu = [
    # macOS Metal 加速（可选）
    "pyobjc-framework-Metal",
    "pyobjc-framework-MetalPerformanceShaders",
    # CUDA 加速（可选，NVIDIA 显卡）
    "cupy-cuda11x",
]

[tool.setuptools.packages.find]
include = ["divere*"]
exclude = ["test_scans*", "tests*"]

[tool.setuptools.package-data]
divere = [
    "config/**/*",
    "models/**/*",
    "assets/**/*",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["divere"]
known_third_party = ["PySide6", "numpy", "cv2", "PIL", "scipy", "imageio", "colour", "pyopencl", "tifffile", "imagecodecs", "cma"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "PIL.*",
    "colour.*",
    "torch.*",
    "torchvision.*",
    "pyopencl.*",
    "tifffile.*",
    "imagecodecs.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=divere",
    "--cov-report=term-missing",
    "--cov-report=html",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gui: marks tests as GUI tests",
]

[tool.coverage.run]
source = ["divere"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 